diff a/Satellite/Satellite/Enemy.cpp b/Satellite/Satellite/Enemy.cpp	(rejected hunks)
@@ -41,7 +41,7 @@
 	m_life = 1;
 
 	SetSprite(20, 2);
-	SetSprite_Tesla(5, 2);
+	SetSprite_Tesla(5);
 
 	Point enmytmp = m_Pos;
 	enmytmp = enmytmp - m_tergetPos;
@@ -71,23 +71,21 @@
 		
 		damage(ATK_UNIT_T);
 
-		if (m_Shockframenum >= 1) {
-			
+		if (m_ShockMaxTime >0) {
+			/*
 			m_Shockupdatetime++;
 			if (m_Shockupdatetime > m_Shockoneframetime) {
 				m_Shockupdatetime = 0;
 				m_Shockdrawframenum++;
 
+			}*/
+			m_ShockMaxTime--;
+			if (m_ShockMaxTime <= 0) {
+				m_isTesla = false;
+				//return;
 			}
-			if (m_Shockdrawframenum >= m_Shockframenum) {
-				m_Shockdrawframenum = 0;
-				m_ShockMaxTime--;
-				if (m_ShockMaxTime <= 0) {
-					m_isTesla = false;
-				}
-				return;
 
-			}
+			
 		}
 	}
 	
@@ -101,7 +99,8 @@
 		m_Dir = m_Pos-m_tergetPos;
 		m_Dir.normalize();
 
-		m_Pos += m_Dir*(0.5f*(1-1.f/(float)m_UnitMovemaxTime));
+		m_Pos += m_Dir*(0.5f);
+		//m_Pos += m_Dir*(0.5f*(1.f-1.f/(float)m_UnitMovemaxTime));
 		m_UnitMovemaxTime=max(0, m_UnitMovemaxTime-1);
 
 	}
@@ -113,12 +112,9 @@
 
 		if (m_isTesla) {
 			m_Pos += m_Dir*m_Speed*0.5f;
-
 		}
 		else {
-
 			m_Pos += m_Dir*m_Speed;
-			
 		}
 
 		if (ID > 0) {
@@ -200,10 +196,10 @@
 	}
 }
 
-void CEnemy::SetTeslaShock() {
+void CEnemy::SetTeslaShock(int framemaxtime) {
 	//PlaySound(L"sound/tesla sound.wav", NULL, SND_ASYNC);
 	//Play_effect(ENUM_SOUND::TESLA) 
+	m_ShockMaxTime = framemaxtime;
 	m_isTeslaSound = true;
 	m_isTesla = true;
-	m_ShockMaxTime = 4;
 }
\ No newline at end of file
